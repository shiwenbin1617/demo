2023-12-27 08:34:46 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:35:41 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:38:17 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:41:49 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:42:51 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:44:17 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:45:24 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:51:02 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:51:22 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 08:51:36 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:00:20 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:00:20 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:00:20 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:00:20 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "aomaker", "user": "aomaker"}
2023-12-27 09:00:20 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "http://139.198.178.77:7777"
2023-12-27 09:00:25 [MainProcess]-[MainThread]-[login.login:17]-[ERROR]:登录失败
2023-12-27 09:04:12 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:04:12 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:04:12 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:04:12 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "aomaker", "user": "aomaker"}
2023-12-27 09:04:12 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "http://139.198.178.77:7777"
2023-12-27 09:04:17 [MainProcess]-[MainThread]-[login.login:17]-[ERROR]:登录失败
2023-12-27 09:04:39 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:04:39 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:04:39 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:04:39 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "aomaker", "user": "aomaker"}
2023-12-27 09:04:39 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "http://139.198.178.77:7777"
2023-12-27 09:06:03 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:06:03 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:06:03 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:06:03 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "aomaker", "user": "aomaker"}
2023-12-27 09:06:03 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "http://139.198.178.77:7777"
2023-12-27 09:07:23 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:07:23 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:07:23 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:07:23 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "aomaker", "user": "aomaker"}
2023-12-27 09:07:23 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "http://139.198.178.77:7777"
2023-12-27 09:07:28 [MainProcess]-[MainThread]-[login.login:17]-[ERROR]:登录失败
2023-12-27 09:13:58 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:13:58 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:13:58 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:13:58 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 09:13:58 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 09:13:59 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 09:13:59 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 09:13:59 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m demo', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 09:14:00 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[cache.set:121]-[DEBUG]:缓存插入重复数据, key:headers，worker:MainProcess，已被忽略！
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 09:16:30 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m demo', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 09:16:32 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[cache.set:121]-[DEBUG]:缓存插入重复数据, key:headers，worker:MainProcess，已被忽略！
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 09:19:24 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m demo', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 09:19:26 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[cache.set:121]-[DEBUG]:缓存插入重复数据, key:headers，worker:MainProcess，已被忽略！
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 09:39:05 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m demo', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 09:39:07 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 09:39:07 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:**********************🌟 AoMaker已完成测试报告(reports/samaker.html)! 🌟**********************
2023-12-27 09:39:07 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:***********************************🧹 测试结束，开始清理环境 🧹***********************************
2023-12-27 09:39:07 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧹 清理环境完成！ 🧹*************************************
2023-12-27 10:16:32 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 10:16:32 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 10:16:32 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 10:16:32 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 10:16:32 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 10:16:33 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 10:16:33 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 10:16:33 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m case', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<create_case>前置依赖<get_directory>执行==========
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[_samaker._call_dependence:228]-[INFO]:==========<get_directory>前置依赖<get_projects>执行==========
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Project.get_projects 获取所有项目 
🚀 <Request>
     URL: https://api.pity.fun/project/list
     Request Params: {'page': '1', 'size': '10'}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'create_user': 6, 'created_at': '2023-12-05 16:44:01', 'deleted_at': 0, 'name': 'cs', 'app': 'cs', 'description': 'cs', 'dingtalk_url': '', 'updated_at': '2023-12-05 16:44:01', 'id': 1285, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-12-04 12:27:39', 'deleted_at': 0, 'name': '测试项目002', 'app': '123', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:28:36', 'id': 1265, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-12-04 11:48:31', 'deleted_at': 0, 'name': '测试项目001', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:14:06', 'id': 1264, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-12-02 11:28:11', 'deleted_at': 0, 'name': '11343432', 'app': 'a', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-12-02 11:28:11', 'id': 1262, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-20 17:32:59', 'deleted_at': 0, 'name': 'project173259', 'app': 'ad', 'description': 'a', 'dingtalk_url': '', 'updated_at': '2023-12-01 11:08:45', 'id': 1252, 'update_user': 6, 'owner': 6, 'private': True, 'avatar': None}, {'create_user': 6, 'created_at': '2023-11-18 17:07:20', 'deleted_at': 0, 'name': 'demo', 'app': 'demo', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-11-30 17:08:55', 'id': 1257, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-30 16:12:41', 'deleted_at': 0, 'name': 'test132', 'app': '测试百度demo', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-30 16:12:41', 'id': 1256, 'update_user': 6, 'owner': 7, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-29 21:22:19', 'deleted_at': 0, 'name': 'gw', 'app': 'RFT', 'description': 'GEG', 'dingtalk_url': '', 'updated_at': '2023-10-29 21:22:19', 'id': 1255, 'update_user': 6, 'owner': 5, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-27 17:55:49', 'deleted_at': 0, 'name': '1233213', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-27 17:55:49', 'id': 1254, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-21 12:48:23', 'deleted_at': 0, 'name': 'guest', 'app': '118.110.114.112', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-10-21 12:48:23', 'id': 1253, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}], 'total': 1110}
====================================================================================================
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_projects,已被忽略！
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Project.get_projects 获取所有项目的响应jsonschema已保存到schema表中
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量project_info完成==========
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<get_directory>前置依赖<get_projects>结束==========
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_directory 获取测试目录 
🚀 <Request>
     URL: https://api.pity.fun/testcase/directory
     Request Params: {'project_id': 1285, 'move': True}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'title': 'test', 'key': 333, 'value': 333, 'label': 'test', 'children': []}, {'title': '测试123', 'key': 334, 'value': 334, 'label': '测试123', 'children': [{'title': 'sb', 'key': 335, 'children': [], 'label': 'sb', 'value': 335, 'disabled': False}]}]}
====================================================================================================
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_directory,已被忽略！
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_directory 获取测试目录的响应jsonschema已保存到schema表中
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量directory_info完成==========
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<create_case>前置依赖<get_directory>结束==========
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例1000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': None}
====================================================================================================
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例20000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': None}
====================================================================================================
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:34 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例300000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': None}
====================================================================================================
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例40000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': None}
====================================================================================================
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例5000000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': None}
====================================================================================================
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例6', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例7', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例8', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:16:35 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例9', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例10', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<delete_case>前置依赖<get_testcases>执行==========
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<get_testcases>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_testcases 获取测试用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/list
     Request Params: {'directory_id': 333, 'name': '', 'create_user': ''}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'create_user': 6, 'body': "{'a':1}", 'update_user': 6, 'body_type': 1, 'name': '111', 'directory_id': 333, 'id': 306, 'request_type': 1, 'tag': '', 'created_at': '2023-12-06 14:18:33', 'url': '/s?wd=nice', 'status': 1, 'updated_at': '2023-12-08 20:40:28', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': 'test'}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1', 'directory_id': 333, 'id': 419, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例10', 'directory_id': 333, 'id': 428, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1000', 'directory_id': 333, 'id': 449, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例103123312', 'directory_id': 333, 'id': 448, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例11', 'directory_id': 333, 'id': 429, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例12', 'directory_id': 333, 'id': 430, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13', 'directory_id': 333, 'id': 431, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13333333', 'directory_id': 333, 'id': 439, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例14', 'directory_id': 333, 'id': 432, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例15', 'directory_id': 333, 'id': 433, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例16', 'directory_id': 333, 'id': 434, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例17', 'directory_id': 333, 'id': 435, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例18', 'directory_id': 333, 'id': 436, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例19', 'directory_id': 333, 'id': 437, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例2', 'directory_id': 333, 'id': 420, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20', 'directory_id': 333, 'id': 438, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20000', 'directory_id': 333, 'id': 450, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例23333333', 'directory_id': 333, 'id': 440, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3', 'directory_id': 333, 'id': 421, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例300000', 'directory_id': 333, 'id': 451, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3333333', 'directory_id': 333, 'id': 441, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例4', 'directory_id': 333, 'id': 422, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例40000', 'directory_id': 333, 'id': 452, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例44444443', 'directory_id': 333, 'id': 442, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5', 'directory_id': 333, 'id': 423, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5000000', 'directory_id': 333, 'id': 453, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例545534312', 'directory_id': 333, 'id': 443, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例6', 'directory_id': 333, 'id': 424, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例633123123', 'directory_id': 333, 'id': 444, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7', 'directory_id': 333, 'id': 425, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7312312', 'directory_id': 333, 'id': 445, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8', 'directory_id': 333, 'id': 426, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8321312', 'directory_id': 333, 'id': 446, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9', 'directory_id': 333, 'id': 427, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9312312', 'directory_id': 333, 'id': 447, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}]}
====================================================================================================
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_testcases,已被忽略！
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_testcases 获取测试用例的响应jsonschema已保存到schema表中
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量case_info完成==========
2023-12-27 10:16:36 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<delete_case>前置依赖<get_testcases>结束==========
2023-12-27 10:16:38 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 10:16:38 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:**********************🌟 AoMaker已完成测试报告(reports/samaker.html)! 🌟**********************
2023-12-27 10:16:38 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:***********************************🧹 测试结束，开始清理环境 🧹***********************************
2023-12-27 10:16:38 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧹 清理环境完成！ 🧹*************************************
2023-12-27 10:24:54 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 10:24:54 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 10:24:54 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 10:24:54 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 10:24:54 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 10:24:54 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 10:24:54 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 10:24:54 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m case', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<create_case>前置依赖<get_directory>执行==========
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[_samaker._call_dependence:228]-[INFO]:==========<get_directory>前置依赖<get_projects>执行==========
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Project.get_projects 获取所有项目 
🚀 <Request>
     URL: https://api.pity.fun/project/list
     Request Params: {'page': '1', 'size': '10'}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'created_at': '2023-12-05 16:44:01', 'create_user': 6, 'deleted_at': 0, 'name': 'cs', 'app': 'cs', 'description': 'cs', 'dingtalk_url': '', 'updated_at': '2023-12-05 16:44:01', 'id': 1285, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-04 12:27:39', 'create_user': 6, 'deleted_at': 0, 'name': '测试项目002', 'app': '123', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:28:36', 'id': 1265, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-04 11:48:31', 'create_user': 6, 'deleted_at': 0, 'name': '测试项目001', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:14:06', 'id': 1264, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-02 11:28:11', 'create_user': 6, 'deleted_at': 0, 'name': '11343432', 'app': 'a', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-12-02 11:28:11', 'id': 1262, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}, {'created_at': '2023-10-20 17:32:59', 'create_user': 6, 'deleted_at': 0, 'name': 'project173259', 'app': 'ad', 'description': 'a', 'dingtalk_url': '', 'updated_at': '2023-12-01 11:08:45', 'id': 1252, 'update_user': 6, 'owner': 6, 'private': True, 'avatar': None}, {'created_at': '2023-11-18 17:07:20', 'create_user': 6, 'deleted_at': 0, 'name': 'demo', 'app': 'demo', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-11-30 17:08:55', 'id': 1257, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-10-30 16:12:41', 'create_user': 6, 'deleted_at': 0, 'name': 'test132', 'app': '测试百度demo', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-30 16:12:41', 'id': 1256, 'update_user': 6, 'owner': 7, 'private': False, 'avatar': None}, {'created_at': '2023-10-29 21:22:19', 'create_user': 6, 'deleted_at': 0, 'name': 'gw', 'app': 'RFT', 'description': 'GEG', 'dingtalk_url': '', 'updated_at': '2023-10-29 21:22:19', 'id': 1255, 'update_user': 6, 'owner': 5, 'private': False, 'avatar': None}, {'created_at': '2023-10-27 17:55:49', 'create_user': 6, 'deleted_at': 0, 'name': '1233213', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-27 17:55:49', 'id': 1254, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-10-21 12:48:23', 'create_user': 6, 'deleted_at': 0, 'name': 'guest', 'app': '118.110.114.112', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-10-21 12:48:23', 'id': 1253, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}], 'total': 1110}
====================================================================================================
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_projects,已被忽略！
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Project.get_projects 获取所有项目的响应jsonschema已保存到schema表中
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量project_info完成==========
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<get_directory>前置依赖<get_projects>结束==========
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_directory 获取测试目录 
🚀 <Request>
     URL: https://api.pity.fun/testcase/directory
     Request Params: {'project_id': 1285, 'move': True}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'title': 'test', 'key': 333, 'value': 333, 'label': 'test', 'children': []}, {'title': '测试123', 'key': 334, 'value': 334, 'label': '测试123', 'children': [{'title': 'sb', 'key': 335, 'children': [], 'label': 'sb', 'value': 335, 'disabled': False}]}]}
====================================================================================================
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_directory,已被忽略！
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_directory 获取测试目录的响应jsonschema已保存到schema表中
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量directory_info完成==========
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<create_case>前置依赖<get_directory>结束==========
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例1000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:55 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例20000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例300000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例40000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例5000000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例6', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例7', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例8', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:56 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例9', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例10', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<delete_case>前置依赖<get_testcases>执行==========
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<get_testcases>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_testcases 获取测试用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/list
     Request Params: {'directory_id': 333, 'name': '', 'create_user': ''}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'create_user': 6, 'body': "{'a':1}", 'update_user': 6, 'body_type': 1, 'name': '111', 'directory_id': 333, 'id': 306, 'request_type': 1, 'tag': '', 'created_at': '2023-12-06 14:18:33', 'url': '/s?wd=nice', 'status': 1, 'updated_at': '2023-12-08 20:40:28', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': 'test'}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1', 'directory_id': 333, 'id': 419, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例10', 'directory_id': 333, 'id': 428, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1000', 'directory_id': 333, 'id': 449, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例103123312', 'directory_id': 333, 'id': 448, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例11', 'directory_id': 333, 'id': 429, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例12', 'directory_id': 333, 'id': 430, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13', 'directory_id': 333, 'id': 431, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13333333', 'directory_id': 333, 'id': 439, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例14', 'directory_id': 333, 'id': 432, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例15', 'directory_id': 333, 'id': 433, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例16', 'directory_id': 333, 'id': 434, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例17', 'directory_id': 333, 'id': 435, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例18', 'directory_id': 333, 'id': 436, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例19', 'directory_id': 333, 'id': 437, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例2', 'directory_id': 333, 'id': 420, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20', 'directory_id': 333, 'id': 438, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20000', 'directory_id': 333, 'id': 450, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例23333333', 'directory_id': 333, 'id': 440, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3', 'directory_id': 333, 'id': 421, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例300000', 'directory_id': 333, 'id': 451, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3333333', 'directory_id': 333, 'id': 441, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例4', 'directory_id': 333, 'id': 422, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例40000', 'directory_id': 333, 'id': 452, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例44444443', 'directory_id': 333, 'id': 442, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5', 'directory_id': 333, 'id': 423, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5000000', 'directory_id': 333, 'id': 453, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例545534312', 'directory_id': 333, 'id': 443, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例6', 'directory_id': 333, 'id': 424, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例633123123', 'directory_id': 333, 'id': 444, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7', 'directory_id': 333, 'id': 425, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7312312', 'directory_id': 333, 'id': 445, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8', 'directory_id': 333, 'id': 426, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8321312', 'directory_id': 333, 'id': 446, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9', 'directory_id': 333, 'id': 427, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9312312', 'directory_id': 333, 'id': 447, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}]}
====================================================================================================
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_testcases,已被忽略！
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_testcases 获取测试用例的响应jsonschema已保存到schema表中
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量case_info完成==========
2023-12-27 10:24:57 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<delete_case>前置依赖<get_testcases>结束==========
2023-12-27 10:24:58 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 10:24:58 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:**********************🌟 AoMaker已完成测试报告(reports/samaker.html)! 🌟**********************
2023-12-27 10:24:58 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:***********************************🧹 测试结束，开始清理环境 🧹***********************************
2023-12-27 10:24:58 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧹 清理环境完成！ 🧹*************************************
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m case', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<create_case>前置依赖<get_directory>执行==========
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[_samaker._call_dependence:228]-[INFO]:==========<get_directory>前置依赖<get_projects>执行==========
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Project.get_projects 获取所有项目 
🚀 <Request>
     URL: https://api.pity.fun/project/list
     Request Params: {'page': '1', 'size': '10'}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'created_at': '2023-12-05 16:44:01', 'deleted_at': 0, 'create_user': 6, 'name': 'cs', 'app': 'cs', 'description': 'cs', 'dingtalk_url': '', 'updated_at': '2023-12-05 16:44:01', 'id': 1285, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-04 12:27:39', 'deleted_at': 0, 'create_user': 6, 'name': '测试项目002', 'app': '123', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:28:36', 'id': 1265, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-04 11:48:31', 'deleted_at': 0, 'create_user': 6, 'name': '测试项目001', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:14:06', 'id': 1264, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-02 11:28:11', 'deleted_at': 0, 'create_user': 6, 'name': '11343432', 'app': 'a', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-12-02 11:28:11', 'id': 1262, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}, {'created_at': '2023-10-20 17:32:59', 'deleted_at': 0, 'create_user': 6, 'name': 'project173259', 'app': 'ad', 'description': 'a', 'dingtalk_url': '', 'updated_at': '2023-12-01 11:08:45', 'id': 1252, 'update_user': 6, 'owner': 6, 'private': True, 'avatar': None}, {'created_at': '2023-11-18 17:07:20', 'deleted_at': 0, 'create_user': 6, 'name': 'demo', 'app': 'demo', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-11-30 17:08:55', 'id': 1257, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-10-30 16:12:41', 'deleted_at': 0, 'create_user': 6, 'name': 'test132', 'app': '测试百度demo', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-30 16:12:41', 'id': 1256, 'update_user': 6, 'owner': 7, 'private': False, 'avatar': None}, {'created_at': '2023-10-29 21:22:19', 'deleted_at': 0, 'create_user': 6, 'name': 'gw', 'app': 'RFT', 'description': 'GEG', 'dingtalk_url': '', 'updated_at': '2023-10-29 21:22:19', 'id': 1255, 'update_user': 6, 'owner': 5, 'private': False, 'avatar': None}, {'created_at': '2023-10-27 17:55:49', 'deleted_at': 0, 'create_user': 6, 'name': '1233213', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-27 17:55:49', 'id': 1254, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-10-21 12:48:23', 'deleted_at': 0, 'create_user': 6, 'name': 'guest', 'app': '118.110.114.112', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-10-21 12:48:23', 'id': 1253, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}], 'total': 1110}
====================================================================================================
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_projects,已被忽略！
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Project.get_projects 获取所有项目的响应jsonschema已保存到schema表中
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量project_info完成==========
2023-12-27 10:25:56 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<get_directory>前置依赖<get_projects>结束==========
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_directory 获取测试目录 
🚀 <Request>
     URL: https://api.pity.fun/testcase/directory
     Request Params: {'project_id': 1285, 'move': True}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'title': 'test', 'key': 333, 'value': 333, 'label': 'test', 'children': []}, {'title': '测试123', 'key': 334, 'value': 334, 'label': '测试123', 'children': [{'title': 'sb', 'key': 335, 'children': [], 'label': 'sb', 'value': 335, 'disabled': False}]}]}
====================================================================================================
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_directory,已被忽略！
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_directory 获取测试目录的响应jsonschema已保存到schema表中
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量directory_info完成==========
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<create_case>前置依赖<get_directory>结束==========
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例1000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例20000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例300000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例40000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例5000000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:57 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例6', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例7', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例8', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例9', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:58 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例10', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<delete_case>前置依赖<get_testcases>执行==========
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<get_testcases>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_testcases 获取测试用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/list
     Request Params: {'directory_id': 333, 'name': '', 'create_user': ''}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'create_user': 6, 'body': "{'a':1}", 'update_user': 6, 'body_type': 1, 'name': '111', 'directory_id': 333, 'id': 306, 'request_type': 1, 'tag': '', 'created_at': '2023-12-06 14:18:33', 'url': '/s?wd=nice', 'status': 1, 'updated_at': '2023-12-08 20:40:28', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': 'test'}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1', 'directory_id': 333, 'id': 419, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例10', 'directory_id': 333, 'id': 428, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1000', 'directory_id': 333, 'id': 449, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例103123312', 'directory_id': 333, 'id': 448, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例11', 'directory_id': 333, 'id': 429, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例12', 'directory_id': 333, 'id': 430, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13', 'directory_id': 333, 'id': 431, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13333333', 'directory_id': 333, 'id': 439, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例14', 'directory_id': 333, 'id': 432, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例15', 'directory_id': 333, 'id': 433, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例16', 'directory_id': 333, 'id': 434, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例17', 'directory_id': 333, 'id': 435, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例18', 'directory_id': 333, 'id': 436, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例19', 'directory_id': 333, 'id': 437, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例2', 'directory_id': 333, 'id': 420, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20', 'directory_id': 333, 'id': 438, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20000', 'directory_id': 333, 'id': 450, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例23333333', 'directory_id': 333, 'id': 440, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3', 'directory_id': 333, 'id': 421, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例300000', 'directory_id': 333, 'id': 451, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3333333', 'directory_id': 333, 'id': 441, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例4', 'directory_id': 333, 'id': 422, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例40000', 'directory_id': 333, 'id': 452, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例44444443', 'directory_id': 333, 'id': 442, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5', 'directory_id': 333, 'id': 423, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5000000', 'directory_id': 333, 'id': 453, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例545534312', 'directory_id': 333, 'id': 443, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例6', 'directory_id': 333, 'id': 424, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例633123123', 'directory_id': 333, 'id': 444, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7', 'directory_id': 333, 'id': 425, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7312312', 'directory_id': 333, 'id': 445, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8', 'directory_id': 333, 'id': 426, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8321312', 'directory_id': 333, 'id': 446, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9', 'directory_id': 333, 'id': 427, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9312312', 'directory_id': 333, 'id': 447, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}]}
====================================================================================================
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_testcases,已被忽略！
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_testcases 获取测试用例的响应jsonschema已保存到schema表中
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量case_info完成==========
2023-12-27 10:25:59 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<delete_case>前置依赖<get_testcases>结束==========
2023-12-27 10:26:00 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 10:26:00 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:**********************🌟 AoMaker已完成测试报告(reports/samaker.html)! 🌟**********************
2023-12-27 10:26:00 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:***********************************🧹 测试结束，开始清理环境 🧹***********************************
2023-12-27 10:26:00 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧹 清理环境完成！ 🧹*************************************
2023-12-27 10:29:17 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 10:29:17 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 10:29:17 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 10:29:17 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 10:29:17 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m case', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<create_case>前置依赖<get_directory>执行==========
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[_samaker._call_dependence:228]-[INFO]:==========<get_directory>前置依赖<get_projects>执行==========
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Project.get_projects 获取所有项目 
🚀 <Request>
     URL: https://api.pity.fun/project/list
     Request Params: {'page': '1', 'size': '10'}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'created_at': '2023-12-05 16:44:01', 'create_user': 6, 'deleted_at': 0, 'name': 'cs', 'app': 'cs', 'description': 'cs', 'dingtalk_url': '', 'updated_at': '2023-12-05 16:44:01', 'id': 1285, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-04 12:27:39', 'create_user': 6, 'deleted_at': 0, 'name': '测试项目002', 'app': '123', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:28:36', 'id': 1265, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-04 11:48:31', 'create_user': 6, 'deleted_at': 0, 'name': '测试项目001', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:14:06', 'id': 1264, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-02 11:28:11', 'create_user': 6, 'deleted_at': 0, 'name': '11343432', 'app': 'a', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-12-02 11:28:11', 'id': 1262, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}, {'created_at': '2023-10-20 17:32:59', 'create_user': 6, 'deleted_at': 0, 'name': 'project173259', 'app': 'ad', 'description': 'a', 'dingtalk_url': '', 'updated_at': '2023-12-01 11:08:45', 'id': 1252, 'update_user': 6, 'owner': 6, 'private': True, 'avatar': None}, {'created_at': '2023-11-18 17:07:20', 'create_user': 6, 'deleted_at': 0, 'name': 'demo', 'app': 'demo', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-11-30 17:08:55', 'id': 1257, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-10-30 16:12:41', 'create_user': 6, 'deleted_at': 0, 'name': 'test132', 'app': '测试百度demo', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-30 16:12:41', 'id': 1256, 'update_user': 6, 'owner': 7, 'private': False, 'avatar': None}, {'created_at': '2023-10-29 21:22:19', 'create_user': 6, 'deleted_at': 0, 'name': 'gw', 'app': 'RFT', 'description': 'GEG', 'dingtalk_url': '', 'updated_at': '2023-10-29 21:22:19', 'id': 1255, 'update_user': 6, 'owner': 5, 'private': False, 'avatar': None}, {'created_at': '2023-10-27 17:55:49', 'create_user': 6, 'deleted_at': 0, 'name': '1233213', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-27 17:55:49', 'id': 1254, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-10-21 12:48:23', 'create_user': 6, 'deleted_at': 0, 'name': 'guest', 'app': '118.110.114.112', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-10-21 12:48:23', 'id': 1253, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}], 'total': 1110}
====================================================================================================
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_projects,已被忽略！
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Project.get_projects 获取所有项目的响应jsonschema已保存到schema表中
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量project_info完成==========
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<get_directory>前置依赖<get_projects>结束==========
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_directory 获取测试目录 
🚀 <Request>
     URL: https://api.pity.fun/testcase/directory
     Request Params: {'project_id': 1285, 'move': True}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'title': 'test', 'key': 333, 'value': 333, 'label': 'test', 'children': []}, {'title': '测试123', 'key': 334, 'value': 334, 'label': '测试123', 'children': [{'title': 'sb', 'key': 335, 'children': [], 'label': 'sb', 'value': 335, 'disabled': False}]}]}
====================================================================================================
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_directory,已被忽略！
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_directory 获取测试目录的响应jsonschema已保存到schema表中
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量directory_info完成==========
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<create_case>前置依赖<get_directory>结束==========
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例1000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:18 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例20000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例300000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例40000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例5000000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例6', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例7', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例8', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例9', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:19 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例10', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<delete_case>前置依赖<get_testcases>执行==========
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<get_testcases>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_testcases 获取测试用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/list
     Request Params: {'directory_id': 333, 'name': '', 'create_user': ''}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'create_user': 6, 'body': "{'a':1}", 'update_user': 6, 'body_type': 1, 'name': '111', 'directory_id': 333, 'id': 306, 'request_type': 1, 'tag': '', 'created_at': '2023-12-06 14:18:33', 'url': '/s?wd=nice', 'status': 1, 'updated_at': '2023-12-08 20:40:28', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': 'test'}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1', 'directory_id': 333, 'id': 419, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例10', 'directory_id': 333, 'id': 428, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1000', 'directory_id': 333, 'id': 449, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例103123312', 'directory_id': 333, 'id': 448, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例11', 'directory_id': 333, 'id': 429, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例12', 'directory_id': 333, 'id': 430, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13', 'directory_id': 333, 'id': 431, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13333333', 'directory_id': 333, 'id': 439, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例14', 'directory_id': 333, 'id': 432, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例15', 'directory_id': 333, 'id': 433, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例16', 'directory_id': 333, 'id': 434, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例17', 'directory_id': 333, 'id': 435, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例18', 'directory_id': 333, 'id': 436, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例19', 'directory_id': 333, 'id': 437, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例2', 'directory_id': 333, 'id': 420, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20', 'directory_id': 333, 'id': 438, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20000', 'directory_id': 333, 'id': 450, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例23333333', 'directory_id': 333, 'id': 440, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3', 'directory_id': 333, 'id': 421, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例300000', 'directory_id': 333, 'id': 451, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3333333', 'directory_id': 333, 'id': 441, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例4', 'directory_id': 333, 'id': 422, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例40000', 'directory_id': 333, 'id': 452, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例44444443', 'directory_id': 333, 'id': 442, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5', 'directory_id': 333, 'id': 423, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5000000', 'directory_id': 333, 'id': 453, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例545534312', 'directory_id': 333, 'id': 443, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例6', 'directory_id': 333, 'id': 424, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例633123123', 'directory_id': 333, 'id': 444, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7', 'directory_id': 333, 'id': 425, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7312312', 'directory_id': 333, 'id': 445, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8', 'directory_id': 333, 'id': 426, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8321312', 'directory_id': 333, 'id': 446, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9', 'directory_id': 333, 'id': 427, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9312312', 'directory_id': 333, 'id': 447, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}]}
====================================================================================================
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_testcases,已被忽略！
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_testcases 获取测试用例的响应jsonschema已保存到schema表中
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量case_info完成==========
2023-12-27 10:29:20 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<delete_case>前置依赖<get_testcases>结束==========
2023-12-27 10:29:21 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 10:29:21 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:**********************🌟 AoMaker已完成测试报告(reports/samaker.html)! 🌟**********************
2023-12-27 10:29:21 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:***********************************🧹 测试结束，开始清理环境 🧹***********************************
2023-12-27 10:29:21 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧹 清理环境完成！ 🧹*************************************
2023-12-27 10:30:19 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 10:30:19 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 10:30:19 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 10:30:19 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 10:30:19 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 10:30:19 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 10:30:19 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 10:30:19 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m case', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<create_case>前置依赖<get_directory>执行==========
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[_samaker._call_dependence:228]-[INFO]:==========<get_directory>前置依赖<get_projects>执行==========
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Project.get_projects 获取所有项目 
🚀 <Request>
     URL: https://api.pity.fun/project/list
     Request Params: {'page': '1', 'size': '10'}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'create_user': 6, 'created_at': '2023-12-05 16:44:01', 'deleted_at': 0, 'name': 'cs', 'app': 'cs', 'description': 'cs', 'dingtalk_url': '', 'updated_at': '2023-12-05 16:44:01', 'id': 1285, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-12-04 12:27:39', 'deleted_at': 0, 'name': '测试项目002', 'app': '123', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:28:36', 'id': 1265, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-12-04 11:48:31', 'deleted_at': 0, 'name': '测试项目001', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:14:06', 'id': 1264, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-12-02 11:28:11', 'deleted_at': 0, 'name': '11343432', 'app': 'a', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-12-02 11:28:11', 'id': 1262, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-20 17:32:59', 'deleted_at': 0, 'name': 'project173259', 'app': 'ad', 'description': 'a', 'dingtalk_url': '', 'updated_at': '2023-12-01 11:08:45', 'id': 1252, 'update_user': 6, 'owner': 6, 'private': True, 'avatar': None}, {'create_user': 6, 'created_at': '2023-11-18 17:07:20', 'deleted_at': 0, 'name': 'demo', 'app': 'demo', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-11-30 17:08:55', 'id': 1257, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-30 16:12:41', 'deleted_at': 0, 'name': 'test132', 'app': '测试百度demo', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-30 16:12:41', 'id': 1256, 'update_user': 6, 'owner': 7, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-29 21:22:19', 'deleted_at': 0, 'name': 'gw', 'app': 'RFT', 'description': 'GEG', 'dingtalk_url': '', 'updated_at': '2023-10-29 21:22:19', 'id': 1255, 'update_user': 6, 'owner': 5, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-27 17:55:49', 'deleted_at': 0, 'name': '1233213', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-27 17:55:49', 'id': 1254, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'create_user': 6, 'created_at': '2023-10-21 12:48:23', 'deleted_at': 0, 'name': 'guest', 'app': '118.110.114.112', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-10-21 12:48:23', 'id': 1253, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}], 'total': 1110}
====================================================================================================
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_projects,已被忽略！
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Project.get_projects 获取所有项目的响应jsonschema已保存到schema表中
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量project_info完成==========
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<get_directory>前置依赖<get_projects>结束==========
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_directory 获取测试目录 
🚀 <Request>
     URL: https://api.pity.fun/testcase/directory
     Request Params: {'project_id': 1285, 'move': True}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'title': 'test', 'key': 333, 'value': 333, 'label': 'test', 'children': []}, {'title': '测试123', 'key': 334, 'value': 334, 'label': '测试123', 'children': [{'title': 'sb', 'key': 335, 'children': [], 'label': 'sb', 'value': 335, 'disabled': False}]}]}
====================================================================================================
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_directory,已被忽略！
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_directory 获取测试目录的响应jsonschema已保存到schema表中
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量directory_info完成==========
2023-12-27 10:30:20 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<create_case>前置依赖<get_directory>结束==========
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例1000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例20000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例300000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例40000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例5000000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:21 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例6', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例7', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例8', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例9', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:22 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例10', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<delete_case>前置依赖<get_testcases>执行==========
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<get_testcases>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_testcases 获取测试用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/list
     Request Params: {'directory_id': 333, 'name': '', 'create_user': ''}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'create_user': 6, 'body': "{'a':1}", 'update_user': 6, 'body_type': 1, 'name': '111', 'directory_id': 333, 'id': 306, 'request_type': 1, 'tag': '', 'created_at': '2023-12-06 14:18:33', 'url': '/s?wd=nice', 'status': 1, 'updated_at': '2023-12-08 20:40:28', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': 'test'}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1', 'directory_id': 333, 'id': 419, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例10', 'directory_id': 333, 'id': 428, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1000', 'directory_id': 333, 'id': 449, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例103123312', 'directory_id': 333, 'id': 448, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例11', 'directory_id': 333, 'id': 429, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例12', 'directory_id': 333, 'id': 430, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13', 'directory_id': 333, 'id': 431, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13333333', 'directory_id': 333, 'id': 439, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例14', 'directory_id': 333, 'id': 432, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例15', 'directory_id': 333, 'id': 433, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例16', 'directory_id': 333, 'id': 434, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例17', 'directory_id': 333, 'id': 435, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例18', 'directory_id': 333, 'id': 436, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例19', 'directory_id': 333, 'id': 437, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例2', 'directory_id': 333, 'id': 420, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20', 'directory_id': 333, 'id': 438, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20000', 'directory_id': 333, 'id': 450, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例23333333', 'directory_id': 333, 'id': 440, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3', 'directory_id': 333, 'id': 421, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例300000', 'directory_id': 333, 'id': 451, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3333333', 'directory_id': 333, 'id': 441, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例4', 'directory_id': 333, 'id': 422, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例40000', 'directory_id': 333, 'id': 452, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例44444443', 'directory_id': 333, 'id': 442, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5', 'directory_id': 333, 'id': 423, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5000000', 'directory_id': 333, 'id': 453, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例545534312', 'directory_id': 333, 'id': 443, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例6', 'directory_id': 333, 'id': 424, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例633123123', 'directory_id': 333, 'id': 444, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7', 'directory_id': 333, 'id': 425, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7312312', 'directory_id': 333, 'id': 445, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8', 'directory_id': 333, 'id': 426, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8321312', 'directory_id': 333, 'id': 446, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9', 'directory_id': 333, 'id': 427, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9312312', 'directory_id': 333, 'id': 447, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}]}
====================================================================================================
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_testcases,已被忽略！
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_testcases 获取测试用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量case_info完成==========
2023-12-27 10:30:23 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<delete_case>前置依赖<get_testcases>结束==========
2023-12-27 10:30:25 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 10:30:25 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:**********************🌟 AoMaker已完成测试报告(reports/samaker.html)! 🌟**********************
2023-12-27 10:30:25 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:***********************************🧹 测试结束，开始清理环境 🧹***********************************
2023-12-27 10:30:25 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧹 清理环境完成！ 🧹*************************************
2023-12-27 10:30:37 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧩 开始初始化环境 🧩*************************************
2023-12-27 10:30:37 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: run_mode, value: "main"
2023-12-27 10:30:37 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: current_env, value: "test"
2023-12-27 10:30:37 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: account, value: {"pwd": "tester", "user": "tester"}
2023-12-27 10:30:37 [MainProcess]-[MainThread]-[cache.set:26]-[DEBUG]:config全局配置已加载=====>key: host, value: "https://api.pity.fun"
2023-12-27 10:30:37 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:****************************🍺 环境初始化完成，所有全局配置已加载到config表 🍺****************************
2023-12-27 10:30:37 [MainProcess]-[MainThread]-[runner.run:68]-[INFO]:<SaMaker> 单进程启动
2023-12-27 10:30:37 [MainProcess]-[MainThread]-[runner.run:69]-[INFO]:<SaMaker> pytest的执行参数：['-m case', '-s', '--alluredir=/Users/shiwenbin/Desktop/aomaker-demo/reports/json', '--show-capture=no', '--log-format=%(asctime)s %(message)s', '--log-date-format=%Y-%m-%d %H:%M:%S']
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<create_case>前置依赖<get_directory>执行==========
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[_samaker._call_dependence:228]-[INFO]:==========<get_directory>前置依赖<get_projects>执行==========
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Project.get_projects 获取所有项目 
🚀 <Request>
     URL: https://api.pity.fun/project/list
     Request Params: {'page': '1', 'size': '10'}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'created_at': '2023-12-05 16:44:01', 'create_user': 6, 'deleted_at': 0, 'name': 'cs', 'app': 'cs', 'description': 'cs', 'dingtalk_url': '', 'updated_at': '2023-12-05 16:44:01', 'id': 1285, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-04 12:27:39', 'create_user': 6, 'deleted_at': 0, 'name': '测试项目002', 'app': '123', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:28:36', 'id': 1265, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-04 11:48:31', 'create_user': 6, 'deleted_at': 0, 'name': '测试项目001', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-12-04 12:14:06', 'id': 1264, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-12-02 11:28:11', 'create_user': 6, 'deleted_at': 0, 'name': '11343432', 'app': 'a', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-12-02 11:28:11', 'id': 1262, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}, {'created_at': '2023-10-20 17:32:59', 'create_user': 6, 'deleted_at': 0, 'name': 'project173259', 'app': 'ad', 'description': 'a', 'dingtalk_url': '', 'updated_at': '2023-12-01 11:08:45', 'id': 1252, 'update_user': 6, 'owner': 6, 'private': True, 'avatar': None}, {'created_at': '2023-11-18 17:07:20', 'create_user': 6, 'deleted_at': 0, 'name': 'demo', 'app': 'demo', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-11-30 17:08:55', 'id': 1257, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-10-30 16:12:41', 'create_user': 6, 'deleted_at': 0, 'name': 'test132', 'app': '测试百度demo', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-30 16:12:41', 'id': 1256, 'update_user': 6, 'owner': 7, 'private': False, 'avatar': None}, {'created_at': '2023-10-29 21:22:19', 'create_user': 6, 'deleted_at': 0, 'name': 'gw', 'app': 'RFT', 'description': 'GEG', 'dingtalk_url': '', 'updated_at': '2023-10-29 21:22:19', 'id': 1255, 'update_user': 6, 'owner': 5, 'private': False, 'avatar': None}, {'created_at': '2023-10-27 17:55:49', 'create_user': 6, 'deleted_at': 0, 'name': '1233213', 'app': '1', 'description': '1', 'dingtalk_url': '', 'updated_at': '2023-10-27 17:55:49', 'id': 1254, 'update_user': 6, 'owner': 1, 'private': False, 'avatar': None}, {'created_at': '2023-10-21 12:48:23', 'create_user': 6, 'deleted_at': 0, 'name': 'guest', 'app': '118.110.114.112', 'description': '', 'dingtalk_url': '', 'updated_at': '2023-10-21 12:48:23', 'id': 1253, 'update_user': 6, 'owner': 6, 'private': False, 'avatar': None}], 'total': 1110}
====================================================================================================
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_projects,已被忽略！
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Project.get_projects 获取所有项目的响应jsonschema已保存到schema表中
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量project_info完成==========
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<get_directory>前置依赖<get_projects>结束==========
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_directory 获取测试目录 
🚀 <Request>
     URL: https://api.pity.fun/testcase/directory
     Request Params: {'project_id': 1285, 'move': True}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'title': 'test', 'key': 333, 'value': 333, 'label': 'test', 'children': []}, {'title': '测试123', 'key': 334, 'value': 334, 'label': '测试123', 'children': [{'title': 'sb', 'key': 335, 'children': [], 'label': 'sb', 'value': 335, 'disabled': False}]}]}
====================================================================================================
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_directory,已被忽略！
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_directory 获取测试目录的响应jsonschema已保存到schema表中
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量directory_info完成==========
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<create_case>前置依赖<get_directory>结束==========
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例1000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:38 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例20000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例300000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例40000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例5000000', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例6', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例7', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:39 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例8', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例9', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<create_case>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.create_case 新建用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/create
     Request Json: {'case': {'name': '用例10', 'priority': 'P0', 'status': 3, 'request_type': 1, 'tag': None, 'case_type': 0, 'request_method': 'GET', 'url': 'https://www.baidu.com', 'directory_id': 333, 'request_headers': '{}'}, 'asserts': [], 'data': [], 'constructor': [], 'out_parameters': []}
✅ <Response>
     Response Body: {'code': 110, 'msg': '用例名称已存在'}
====================================================================================================
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: create_case,已被忽略！
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.create_case 新建用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_testcase.assert_eq:20]-[ERROR]:eq断言失败，预期结果：0，实际结果：110
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[_samaker._call_dependence:218]-[INFO]:==========<delete_case>前置依赖<get_testcases>执行==========
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[_samaker.wrapper:49]-[INFO]:==========<get_testcases>前置依赖已被调用过，本次不再调用,依赖参数directory_info直接从cache表中读取==========
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_api.inner:86]-[INFO]:
====================================================================================================
🅰️ <API>: Case.get_testcases 获取测试用例 
🚀 <Request>
     URL: https://api.pity.fun/testcase/list
     Request Params: {'directory_id': 333, 'name': '', 'create_user': ''}
✅ <Response>
     Response Body: {'code': 0, 'msg': '操作成功', 'data': [{'create_user': 6, 'body': "{'a':1}", 'update_user': 6, 'body_type': 1, 'name': '111', 'directory_id': 333, 'id': 306, 'request_type': 1, 'tag': '', 'created_at': '2023-12-06 14:18:33', 'url': '/s?wd=nice', 'status': 1, 'updated_at': '2023-12-08 20:40:28', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': 'test'}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1', 'directory_id': 333, 'id': 419, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例10', 'directory_id': 333, 'id': 428, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例1000', 'directory_id': 333, 'id': 449, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例103123312', 'directory_id': 333, 'id': 448, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例11', 'directory_id': 333, 'id': 429, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例12', 'directory_id': 333, 'id': 430, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13', 'directory_id': 333, 'id': 431, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:20', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:20', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例13333333', 'directory_id': 333, 'id': 439, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例14', 'directory_id': 333, 'id': 432, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例15', 'directory_id': 333, 'id': 433, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:21', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:21', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例16', 'directory_id': 333, 'id': 434, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例17', 'directory_id': 333, 'id': 435, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:22', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:22', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例18', 'directory_id': 333, 'id': 436, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例19', 'directory_id': 333, 'id': 437, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例2', 'directory_id': 333, 'id': 420, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:05', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:05', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20', 'directory_id': 333, 'id': 438, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 13:09:23', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 13:09:23', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例20000', 'directory_id': 333, 'id': 450, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例23333333', 'directory_id': 333, 'id': 440, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3', 'directory_id': 333, 'id': 421, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例300000', 'directory_id': 333, 'id': 451, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例3333333', 'directory_id': 333, 'id': 441, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例4', 'directory_id': 333, 'id': 422, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:06', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:06', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例40000', 'directory_id': 333, 'id': 452, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例44444443', 'directory_id': 333, 'id': 442, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:53', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:53', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5', 'directory_id': 333, 'id': 423, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例5000000', 'directory_id': 333, 'id': 453, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:16:35', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:16:35', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例545534312', 'directory_id': 333, 'id': 443, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例6', 'directory_id': 333, 'id': 424, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例633123123', 'directory_id': 333, 'id': 444, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7', 'directory_id': 333, 'id': 425, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:07', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:07', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例7312312', 'directory_id': 333, 'id': 445, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8', 'directory_id': 333, 'id': 426, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例8321312', 'directory_id': 333, 'id': 446, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9', 'directory_id': 333, 'id': 427, 'request_type': 1, 'tag': None, 'created_at': '2023-12-25 11:18:08', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-25 11:18:08', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}, {'create_user': 6, 'body': None, 'update_user': 6, 'body_type': 0, 'name': '用例9312312', 'directory_id': 333, 'id': 447, 'request_type': 1, 'tag': None, 'created_at': '2023-12-27 10:10:54', 'url': 'https://www.baidu.com', 'status': 3, 'updated_at': '2023-12-27 10:10:54', 'request_method': 'GET', 'priority': 'P0', 'deleted_at': 0, 'request_headers': '{}', 'case_type': 0, 'base_path': None}]}
====================================================================================================
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[cache.set:76]-[DEBUG]:Schema表插入重复数据，key: get_testcases,已被忽略！
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[base_api.inner:90]-[DEBUG]:接口Case.get_testcases 获取测试用例的响应jsonschema已保存到schema表中
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[_samaker.wrapper:46]-[INFO]:==========存储全局变量case_info完成==========
2023-12-27 10:30:40 [MainProcess]-[MainThread]-[_samaker.wrapper:47]-[INFO]:==========<delete_case>前置依赖<get_testcases>结束==========
2023-12-27 10:30:42 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*******************************🌟 测试结束, AoMaker开始收集报告 🌟*******************************
2023-12-27 10:30:42 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:**********************🌟 AoMaker已完成测试报告(reports/samaker.html)! 🌟**********************
2023-12-27 10:30:42 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:***********************************🧹 测试结束，开始清理环境 🧹***********************************
2023-12-27 10:30:42 [MainProcess]-[MainThread]-[_printer.wrapper:18]-[INFO]:*************************************🧹 清理环境完成！ 🧹*************************************
